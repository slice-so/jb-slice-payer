/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  JBETHERC20ProjectPayerClone,
  JBETHERC20ProjectPayerCloneInterface,
} from "../JBETHERC20ProjectPayerClone";

const _abi = [
  {
    inputs: [],
    name: "INCORRECT_DECIMAL_AMOUNT",
    type: "error",
  },
  {
    inputs: [],
    name: "NO_MSG_VALUE_ALLOWED",
    type: "error",
  },
  {
    inputs: [],
    name: "TERMINAL_NOT_FOUND",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "projectId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "preferClaimedTokens",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "string",
        name: "memo",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "metadata",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "preferAddToBalance",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "SetDefaultValues",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_projectId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_decimals",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_memo",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_metadata",
        type: "bytes",
      },
    ],
    name: "addToBalanceOf",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultBeneficiary",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultMemo",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultMetadata",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultPreferAddToBalance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultPreferClaimedTokens",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultProjectId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "directory",
    outputs: [
      {
        internalType: "contract IJBDirectory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_defaultProjectId",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "_defaultBeneficiary",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_defaultPreferClaimedTokens",
        type: "bool",
      },
      {
        internalType: "string",
        name: "_defaultMemo",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_defaultMetadata",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "_defaultPreferAddToBalance",
        type: "bool",
      },
      {
        internalType: "contract IJBDirectory",
        name: "_directory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_projectId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_decimals",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minReturnedTokens",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_preferClaimedTokens",
        type: "bool",
      },
      {
        internalType: "string",
        name: "_memo",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_metadata",
        type: "bytes",
      },
    ],
    name: "pay",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_projectId",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "_beneficiary",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_preferClaimedTokens",
        type: "bool",
      },
      {
        internalType: "string",
        name: "_memo",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_metadata",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "_defaultPreferAddToBalance",
        type: "bool",
      },
    ],
    name: "setDefaultValues",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "";

type JBETHERC20ProjectPayerCloneConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: JBETHERC20ProjectPayerCloneConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class JBETHERC20ProjectPayerClone__factory extends ContractFactory {
  constructor(...args: JBETHERC20ProjectPayerCloneConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "JBETHERC20ProjectPayerClone";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<JBETHERC20ProjectPayerClone> {
    return super.deploy(
      overrides || {}
    ) as Promise<JBETHERC20ProjectPayerClone>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): JBETHERC20ProjectPayerClone {
    return super.attach(address) as JBETHERC20ProjectPayerClone;
  }
  connect(signer: Signer): JBETHERC20ProjectPayerClone__factory {
    return super.connect(signer) as JBETHERC20ProjectPayerClone__factory;
  }
  static readonly contractName: "JBETHERC20ProjectPayerClone";
  public readonly contractName: "JBETHERC20ProjectPayerClone";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): JBETHERC20ProjectPayerCloneInterface {
    return new utils.Interface(_abi) as JBETHERC20ProjectPayerCloneInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): JBETHERC20ProjectPayerClone {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as JBETHERC20ProjectPayerClone;
  }
}
