/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IJBReconfigurationBufferBallot,
  IJBReconfigurationBufferBallotInterface,
} from "../IJBReconfigurationBufferBallot";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "projectId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "configuration",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "enum JBBallotState",
        name: "ballotState",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "Finalize",
    type: "event",
  },
  {
    inputs: [],
    name: "duration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_projectId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_configuration",
        type: "uint256",
      },
    ],
    name: "finalState",
    outputs: [
      {
        internalType: "enum JBBallotState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_projectId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_configured",
        type: "uint256",
      },
    ],
    name: "finalize",
    outputs: [
      {
        internalType: "enum JBBallotState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fundingCycleStore",
    outputs: [
      {
        internalType: "contract IJBFundingCycleStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_projectId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_configuration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_start",
        type: "uint256",
      },
    ],
    name: "stateOf",
    outputs: [
      {
        internalType: "enum JBBallotState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class IJBReconfigurationBufferBallot__factory {
  static readonly abi = _abi;
  static createInterface(): IJBReconfigurationBufferBallotInterface {
    return new utils.Interface(_abi) as IJBReconfigurationBufferBallotInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IJBReconfigurationBufferBallot {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IJBReconfigurationBufferBallot;
  }
}
