/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { JBSplitsStore, JBSplitsStoreInterface } from "../JBSplitsStore";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IJBOperatorStore",
        name: "_operatorStore",
        type: "address",
      },
      {
        internalType: "contract IJBProjects",
        name: "_projects",
        type: "address",
      },
      {
        internalType: "contract IJBDirectory",
        name: "_directory",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "INVALID_LOCKED_UNTIL",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_PROJECT_ID",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_SPLIT_PERCENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_TOTAL_PERCENT",
    type: "error",
  },
  {
    inputs: [],
    name: "PREVIOUS_LOCKED_SPLITS_NOT_INCLUDED",
    type: "error",
  },
  {
    inputs: [],
    name: "UNAUTHORIZED",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "projectId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "domain",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "group",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "preferClaimed",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "preferAddToBalance",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "percent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "projectId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "beneficiary",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "lockedUntil",
            type: "uint256",
          },
          {
            internalType: "contract IJBSplitAllocator",
            name: "allocator",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct JBSplit",
        name: "split",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "SetSplit",
    type: "event",
  },
  {
    inputs: [],
    name: "directory",
    outputs: [
      {
        internalType: "contract IJBDirectory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "operatorStore",
    outputs: [
      {
        internalType: "contract IJBOperatorStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "projects",
    outputs: [
      {
        internalType: "contract IJBProjects",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_projectId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_domain",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "group",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "preferClaimed",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "preferAddToBalance",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "percent",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "projectId",
                type: "uint256",
              },
              {
                internalType: "address payable",
                name: "beneficiary",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "lockedUntil",
                type: "uint256",
              },
              {
                internalType: "contract IJBSplitAllocator",
                name: "allocator",
                type: "address",
              },
            ],
            internalType: "struct JBSplit[]",
            name: "splits",
            type: "tuple[]",
          },
        ],
        internalType: "struct JBGroupedSplits[]",
        name: "_groupedSplits",
        type: "tuple[]",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_projectId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_domain",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_group",
        type: "uint256",
      },
    ],
    name: "splitsOf",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "preferClaimed",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "preferAddToBalance",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "percent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "projectId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "beneficiary",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "lockedUntil",
            type: "uint256",
          },
          {
            internalType: "contract IJBSplitAllocator",
            name: "allocator",
            type: "address",
          },
        ],
        internalType: "struct JBSplit[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60e060405234801561001057600080fd5b5060405161118338038061118383398101604081905261002f91610064565b6001600160a01b0392831660805290821660a0521660c0526100b1565b6001600160a01b038116811461006157600080fd5b50565b60008060006060848603121561007957600080fd5b83516100848161004c565b60208501519093506100958161004c565b60408501519092506100a68161004c565b809150509250925092565b60805160a05160c05161108a6100f96000396000818160f001526101ea015260008181608a015261015201526000818160c9015281816104e3015261058a015261108a6000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806369e11cc51461005c5780638b79543c14610085578063ad007d63146100c4578063c41c2f24146100eb578063f2da44b614610112575b600080fd5b61006f61006a366004610c31565b610127565b60405161007c9190610cb1565b60405180910390f35b6100ac7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161007c565b6100ac7f000000000000000000000000000000000000000000000000000000000000000081565b6100ac7f000000000000000000000000000000000000000000000000000000000000000081565b610125610120366004610cff565b61013c565b005b60606101348484846102d1565b949350505050565b6040516331a9108f60e11b8152600481018590527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690636352211e90602401602060405180830381865afa1580156101a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c59190610d9a565b604051632eec7b5560e11b815260048101869052859060129033906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635dd8f6aa90602401602060405180830381865afa158015610231573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102559190610d9a565b6001600160a01b03161461026b84848484610492565b8460005b818110156102c557600088888381811061028b5761028b610dbe565b905060200281019061029d9190610dd4565b6102a690610e95565b90506102bc8b8b8360000151846020015161061b565b5060010161026f565b50505050505050505050565b60008381526020818152604080832085845282528083208484529091528120546060918167ffffffffffffffff81111561030d5761030d610df4565b60405190808252806020026020018201604052801561037457816020015b6040805160e08101825260008082526020808301829052928201819052606082018190526080820181905260a0820181905260c0820152825260001990920191018161032b5790505b50905060005b828110156104885760008781526001602081815260408084208a855282528084208985528252808420858552825280842054815160e08101835260a0810186905260c081018690528185168514815281851c851690941484840152600281811c63ffffffff1685840152602282901c66ffffffffffffff166060860152605a82901c6001600160a01b031660808601528c865283528185208b865283528185208a865283528185208686529092529092205480156104545765ffffffffffff811660a08301526001600160a01b03603082901c1660c08301525b8185858151811061046757610467610dbe565b6020026020010181905250505050808061048090610fdf565b91505061037a565b5095945050505050565b801580156104a95750336001600160a01b03851614155b8015610550575060405163c161c93f60e01b81523360048201526001600160a01b03858116602483015260448201859052606482018490527f0000000000000000000000000000000000000000000000000000000000000000169063c161c93f90608401602060405180830381865afa15801561052a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054e9190610ff8565b155b80156105f7575060405163c161c93f60e01b81523360048201526001600160a01b03858116602483015260006044830152606482018490527f0000000000000000000000000000000000000000000000000000000000000000169063c161c93f90608401602060405180830381865afa1580156105d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f59190610ff8565b155b156106155760405163075fd2b160e01b815260040160405180910390fd5b50505050565b60006106288585856102d1565b905060005b815181101561082d5781818151811061064857610648610dbe565b602002602001015160a0015142101561081b576000805b84518110156107fa5783838151811061067a5761067a610dbe565b60200260200101516040015185828151811061069857610698610dbe565b6020026020010151604001511480156106fc57508383815181106106be576106be610dbe565b6020026020010151608001516001600160a01b03168582815181106106e5576106e5610dbe565b6020026020010151608001516001600160a01b0316145b8015610753575083838151811061071557610715610dbe565b602002602001015160c001516001600160a01b031685828151811061073c5761073c610dbe565b602002602001015160c001516001600160a01b0316145b8015610798575083838151811061076c5761076c610dbe565b60200260200101516060015185828151811061078a5761078a610dbe565b602002602001015160600151145b80156107de57508383815181106107b1576107b1610dbe565b602002602001015160a001518582815181106107cf576107cf610dbe565b602002602001015160a0015110155b156107e857600191505b806107f281610fdf565b91505061065f565b508061081957604051631974459560e01b815260040160405180910390fd5b505b8061082581610fdf565b91505061062d565b506000805b8351811015610c085783818151811061084d5761084d610dbe565b6020026020010151604001516000036108795760405163e119ba4560e01b815260040160405180910390fd5b66ffffffffffffff801684828151811061089557610895610dbe565b60200260200101516060015111156108c057604051631da26cc960e11b815260040160405180910390fd5b8381815181106108d2576108d2610dbe565b602002602001015160400151826108e99190611015565b9150633b9aca0082111561091057604051630eca736160e41b815260040160405180910390fd5b600084828151811061092457610924610dbe565b60200260200101516000015115610939575060015b84828151811061094b5761094b610dbe565b60200260200101516020015115610960576002175b600285838151811061097457610974610dbe565b602002602001015160400151901b81179050602285838151811061099a5761099a610dbe565b602002602001015160600151901b81179050605a8583815181106109c0576109c0610dbe565b6020908102919091018101516080015160008b81526001835260408082208c835284528082208b835284528082208783529093529182206001600160a01b0390911690921b92909217908190558551909190869084908110610a2457610a24610dbe565b602002602001015160a001511180610a6c575060006001600160a01b0316858381518110610a5457610a54610dbe565b602002602001015160c001516001600160a01b031614155b15610b465765ffffffffffff8016858381518110610a8c57610a8c610dbe565b602002602001015160a001511115610ab75760405163d509b54d60e01b815260040160405180910390fd5b6000858381518110610acb57610acb610dbe565b602002602001015160a0015165ffffffffffff1690506030868481518110610af557610af5610dbe565b60209081029190910181015160c0015160008c81526002835260408082208d835284528082208c83528452808220888352909352919091206001600160a01b0390911690911b919091179055610ba0565b60008881526002602090815260408083208a84528252808320898452825280832085845290915290205415610ba05760008881526002602090815260408083208a8452825280832089845282528083208584529091528120555b8587897f1d65eeba667d8160993d485b4782f11eef3bc64186c6521f2a0801f816e752e7888681518110610bd657610bd6610dbe565b602002602001015133604051610bed92919061102d565b60405180910390a45080610c0081610fdf565b915050610832565b505090516000948552602085815260408087209587529481528486209386529290925250912055565b600080600060608486031215610c4657600080fd5b505081359360208301359350604090920135919050565b80511515825260208082015115159083015260408082015190830152606080820151908301526080808201516001600160a01b039081169184019190915260a0808301519084015260c09182015116910152565b6020808252825182820181905260009190848201906040850190845b81811015610cf357610ce0838551610c5d565b9284019260e09290920191600101610ccd565b50909695505050505050565b60008060008060608587031215610d1557600080fd5b8435935060208501359250604085013567ffffffffffffffff80821115610d3b57600080fd5b818701915087601f830112610d4f57600080fd5b813581811115610d5e57600080fd5b8860208260051b8501011115610d7357600080fd5b95989497505060200194505050565b6001600160a01b0381168114610d9757600080fd5b50565b600060208284031215610dac57600080fd5b8151610db781610d82565b9392505050565b634e487b7160e01b600052603260045260246000fd5b60008235603e19833603018112610dea57600080fd5b9190910192915050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715610e2d57610e2d610df4565b60405290565b60405160e0810167ffffffffffffffff81118282101715610e2d57610e2d610df4565b604051601f8201601f1916810167ffffffffffffffff81118282101715610e7f57610e7f610df4565b604052919050565b8015158114610d9757600080fd5b60006040808336031215610ea857600080fd5b610eb0610e0a565b8335815260208085013567ffffffffffffffff80821115610ed057600080fd5b9086019036601f830112610ee357600080fd5b813581811115610ef557610ef5610df4565b610f03848260051b01610e56565b818152848101925060e0918202840185019136831115610f2257600080fd5b938501935b82851015610fb657808536031215610f3f5760008081fd5b610f47610e33565b8535610f5281610e87565b815285870135610f6181610e87565b81880152858901358982015260608087013590820152608080870135610f8681610d82565b9082015260a0868101359082015260c080870135610fa381610d82565b9082015284529384019392850192610f27565b5093850193909352509195945050505050565b634e487b7160e01b600052601160045260246000fd5b600060018201610ff157610ff1610fc9565b5060010190565b60006020828403121561100a57600080fd5b8151610db781610e87565b6000821982111561102857611028610fc9565b500190565b610100810161103c8285610c5d565b6001600160a01b039290921660e0919091015291905056fea26469706673582212204b90fe17fdd0d06ffbd7295db7e6dc14118b745d775e1b9d71940393a97885af64736f6c634300080d0033";

type JBSplitsStoreConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: JBSplitsStoreConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class JBSplitsStore__factory extends ContractFactory {
  constructor(...args: JBSplitsStoreConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "JBSplitsStore";
  }

  deploy(
    _operatorStore: string,
    _projects: string,
    _directory: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<JBSplitsStore> {
    return super.deploy(
      _operatorStore,
      _projects,
      _directory,
      overrides || {}
    ) as Promise<JBSplitsStore>;
  }
  getDeployTransaction(
    _operatorStore: string,
    _projects: string,
    _directory: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _operatorStore,
      _projects,
      _directory,
      overrides || {}
    );
  }
  attach(address: string): JBSplitsStore {
    return super.attach(address) as JBSplitsStore;
  }
  connect(signer: Signer): JBSplitsStore__factory {
    return super.connect(signer) as JBSplitsStore__factory;
  }
  static readonly contractName: "JBSplitsStore";
  public readonly contractName: "JBSplitsStore";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): JBSplitsStoreInterface {
    return new utils.Interface(_abi) as JBSplitsStoreInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): JBSplitsStore {
    return new Contract(address, _abi, signerOrProvider) as JBSplitsStore;
  }
}
