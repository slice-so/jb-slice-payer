/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { JBPrices, JBPricesInterface } from "../JBPrices";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "PRICE_FEED_ALREADY_EXISTS",
    type: "error",
  },
  {
    inputs: [],
    name: "PRICE_FEED_NOT_FOUND",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "currency",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "base",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "contract IJBPriceFeed",
        name: "feed",
        type: "address",
      },
    ],
    name: "AddFeed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_currency",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_base",
        type: "uint256",
      },
      {
        internalType: "contract IJBPriceFeed",
        name: "_feed",
        type: "address",
      },
    ],
    name: "addFeedFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "feedFor",
    outputs: [
      {
        internalType: "contract IJBPriceFeed",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_currency",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_base",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_decimals",
        type: "uint256",
      },
    ],
    name: "priceFor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161097238038061097283398101604081905261002f91610167565b61003833610047565b61004181610097565b50610197565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b031633146100f65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b03811661015b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100ed565b61016481610047565b50565b60006020828403121561017957600080fd5b81516001600160a01b038116811461019057600080fd5b9392505050565b6107cc806101a66000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806315d63a9114610067578063715018a6146100b85780638da5cb5b146100c257806396364e6d146100d3578063a4d0caf2146100e6578063f2fde38b14610107575b600080fd5b61009b610075366004610571565b60016020908152600092835260408084209091529082529020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100c061011a565b005b6000546001600160a01b031661009b565b6100c06100e13660046105a8565b610159565b6100f96100f43660046105e1565b610233565b6040519081526020016100af565b6100c061011536600461060d565b6103b9565b6000546001600160a01b0316331461014d5760405162461bcd60e51b81526004016101449061062a565b60405180910390fd5b6101576000610454565b565b6000546001600160a01b031633146101835760405162461bcd60e51b81526004016101449061062a565b60008381526001602090815260408083208584529091529020546001600160a01b0316156101c45760405163d28d564f60e01b815260040160405180910390fd5b600083815260016020908152604080832085845282529182902080546001600160a01b0319166001600160a01b0385169081179091559151918252839185917f2809ef679fa4c20b88a6467f2660840ad173b5205fef76c270c5d7ba44cb7057910160405180910390a3505050565b600082840361024e5761024782600a61075b565b90506103b2565b60008481526001602090815260408083208684529091529020546001600160a01b031680156102e857604051637a3c4c1760e01b8152600481018490526001600160a01b03821690637a3c4c1790602401602060405180830381865afa1580156102bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e09190610767565b9150506103b2565b5060008381526001602090815260408083208784529091529020546001600160a01b03168015610399576102e061032084600a61075b565b61032b85600a61075b565b604051637a3c4c1760e01b8152600481018790526001600160a01b03851690637a3c4c1790602401602060405180830381865afa158015610370573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103949190610767565b6104a4565b604051633ae4eae560e11b815260040160405180910390fd5b9392505050565b6000546001600160a01b031633146103e35760405162461bcd60e51b81526004016101449061062a565b6001600160a01b0381166104485760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610144565b61045181610454565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008080600019858709858702925082811083820303915050806000036104de578382816104d4576104d4610780565b04925050506103b2565b83811061050857604051631dcf306360e21b81526004810182905260248101859052604401610144565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000806040838503121561058457600080fd5b50508035926020909101359150565b6001600160a01b038116811461045157600080fd5b6000806000606084860312156105bd57600080fd5b833592506020840135915060408401356105d681610593565b809150509250925092565b6000806000606084860312156105f657600080fd5b505081359360208301359350604090920135919050565b60006020828403121561061f57600080fd5b81356103b281610593565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156106b05781600019048211156106965761069661065f565b808516156106a357918102915b93841c939080029061067a565b509250929050565b6000826106c757506001610755565b816106d457506000610755565b81600181146106ea57600281146106f457610710565b6001915050610755565b60ff8411156107055761070561065f565b50506001821b610755565b5060208310610133831016604e8410600b8410161715610733575081810a610755565b61073d8383610675565b80600019048211156107515761075161065f565b0290505b92915050565b60006103b283836106b8565b60006020828403121561077957600080fd5b5051919050565b634e487b7160e01b600052601260045260246000fdfea2646970667358221220d151494765892f2ca9e42a6ab1eebecab6fd07890082d49bedaa32fc4eb094f864736f6c634300080d0033";

type JBPricesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: JBPricesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class JBPrices__factory extends ContractFactory {
  constructor(...args: JBPricesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "JBPrices";
  }

  deploy(
    _owner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<JBPrices> {
    return super.deploy(_owner, overrides || {}) as Promise<JBPrices>;
  }
  getDeployTransaction(
    _owner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_owner, overrides || {});
  }
  attach(address: string): JBPrices {
    return super.attach(address) as JBPrices;
  }
  connect(signer: Signer): JBPrices__factory {
    return super.connect(signer) as JBPrices__factory;
  }
  static readonly contractName: "JBPrices";
  public readonly contractName: "JBPrices";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): JBPricesInterface {
    return new utils.Interface(_abi) as JBPricesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): JBPrices {
    return new Contract(address, _abi, signerOrProvider) as JBPrices;
  }
}
