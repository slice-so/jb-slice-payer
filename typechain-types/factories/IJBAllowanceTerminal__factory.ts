/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IJBAllowanceTerminal,
  IJBAllowanceTerminalInterface,
} from "../IJBAllowanceTerminal";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_projectId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_currency",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minReturnedTokens",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "_beneficiary",
        type: "address",
      },
      {
        internalType: "string",
        name: "_memo",
        type: "string",
      },
    ],
    name: "useAllowanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "netDistributedAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IJBAllowanceTerminal__factory {
  static readonly abi = _abi;
  static createInterface(): IJBAllowanceTerminalInterface {
    return new utils.Interface(_abi) as IJBAllowanceTerminalInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IJBAllowanceTerminal {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IJBAllowanceTerminal;
  }
}
