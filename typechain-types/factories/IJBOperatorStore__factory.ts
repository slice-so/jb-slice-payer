/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IJBOperatorStore,
  IJBOperatorStoreInterface,
} from "../IJBOperatorStore";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "domain",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "permissionIndexes",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "packed",
        type: "uint256",
      },
    ],
    name: "SetOperator",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_domain",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_permissionIndex",
        type: "uint256",
      },
    ],
    name: "hasPermission",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_domain",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_permissionIndexes",
        type: "uint256[]",
      },
    ],
    name: "hasPermissions",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_domain",
        type: "uint256",
      },
    ],
    name: "permissionsOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "operator",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "domain",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "permissionIndexes",
            type: "uint256[]",
          },
        ],
        internalType: "struct JBOperatorData",
        name: "_operatorData",
        type: "tuple",
      },
    ],
    name: "setOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "operator",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "domain",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "permissionIndexes",
            type: "uint256[]",
          },
        ],
        internalType: "struct JBOperatorData[]",
        name: "_operatorData",
        type: "tuple[]",
      },
    ],
    name: "setOperators",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IJBOperatorStore__factory {
  static readonly abi = _abi;
  static createInterface(): IJBOperatorStoreInterface {
    return new utils.Interface(_abi) as IJBOperatorStoreInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IJBOperatorStore {
    return new Contract(address, _abi, signerOrProvider) as IJBOperatorStore;
  }
}
