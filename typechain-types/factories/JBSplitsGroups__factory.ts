/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  JBSplitsGroups,
  JBSplitsGroupsInterface,
} from "../JBSplitsGroups";

const _abi = [
  {
    inputs: [],
    name: "ETH_PAYOUT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVED_TOKENS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6098610038600b82828239805160001a607314602b57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe7300000000000000000000000000000000000000003014608060405260043610603d5760003560e01c806368fc68c7146042578063ad8710ad14605b575b600080fd5b6049600281565b60405190815260200160405180910390f35b604960018156fea2646970667358221220559eb735a3a73d5e273d49a09af11f92b717e37b2924a7b70255266be948c42564736f6c634300080d0033";

type JBSplitsGroupsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: JBSplitsGroupsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class JBSplitsGroups__factory extends ContractFactory {
  constructor(...args: JBSplitsGroupsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "JBSplitsGroups";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<JBSplitsGroups> {
    return super.deploy(overrides || {}) as Promise<JBSplitsGroups>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): JBSplitsGroups {
    return super.attach(address) as JBSplitsGroups;
  }
  connect(signer: Signer): JBSplitsGroups__factory {
    return super.connect(signer) as JBSplitsGroups__factory;
  }
  static readonly contractName: "JBSplitsGroups";
  public readonly contractName: "JBSplitsGroups";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): JBSplitsGroupsInterface {
    return new utils.Interface(_abi) as JBSplitsGroupsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): JBSplitsGroups {
    return new Contract(address, _abi, signerOrProvider) as JBSplitsGroups;
  }
}
